#! /usr/bin/env node
!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(require("dotenv/config"),require("commander"),require("@datocms/cma-client-node"),require("dedent-js"),require("table"),require("pretty-bytes")):"function"==typeof define&&define.amd?define(["dotenv/config","commander","@datocms/cma-client-node","dedent-js","table","pretty-bytes"],n):n(0,(e||self).commander,e.cmaClientNode,e.dedentJs,e.table,e.prettyBytes)}(this,function(e,n,t,r,a,o){function i(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var c,u=/*#__PURE__*/i(r),s=/*#__PURE__*/i(o),l="1.0.0",d=new n.Command;d.version(l).description("next-dato-utils v"+l).option("-i, --info","Info DatoCMS project").option("-u, --usage","Usage DatoCMS project").option("-to, --token <value>","Api token").option("-t, --test <value>","Test DatoCMS project").parse(process.argv);var f=d.opts(),m=null!=(c=f.token)?c:process.env.DATOCMS_API_TOKEN;if(!m)throw new Error("DATOCMS_API_TOKEN is required");var p=t.buildClient({apiToken:m,environment:process.env.DATOCMS_ENVIRONMENT||"main"});f.info&&function(){try{return Promise.resolve(Promise.all([p.site.find(),p.itemTypes.list(),p.webhooks.list(),p.plugins.list(),p.buildTriggers.list()])).then(function(e){var n,t,r=e[0],a=e[1],o=e[2],i=e[3],c=e[4],s=u.default("\n    "+r.name+"\n    "+(null!=(n=null==(t=c.find(function(e){return e.frontend_url}))?void 0:t.frontend_url)?n:"No frontend url")+"\n\n    -------------------------------\n    Timezone: "+r.timezone+"\n    Locales: "+r.locales+"\n\n    Models\n    -------------------------------\n    "+a.filter(function(e){return!e.modular_block}).map(function(e){return e.api_key}).join("\n")+"\n\n    Blocks\n    -------------------------------\n    "+a.filter(function(e){return e.modular_block}).map(function(e){return e.api_key}).join("\n")+"\n\n    Webhooks\n    -------------------------------\n    "+o.map(function(e){return e.name+"\n"+e.url}).join("\n\n")+"\n\n    Build Triggers\n    -------------------------------\n    "+c.map(function(e){return e.name+"\n"+e.frontend_url}).join("\n")+"\n\n    Plugins\n    -------------------------------\n    "+i.map(function(e){return""+e.name}).join("\n")+"\n  ");console.log(s)})}catch(e){return Promise.reject(e)}}(),f.usage&&function(){try{return Promise.resolve(Promise.all([p.site.find(),p.dailyUsages.list()])).then(function(e){var n=e[0],t=e[1],r=function(e){return e?e.toLocaleString("en-US",{maximumFractionDigits:0}):0},o=t.filter(function(e){return new Date(e.date).getMonth()<(new Date).getMonth()}),i=t.filter(function(e){return new Date(e.date).getMonth()===(new Date).getMonth()}),c={last:{days:o.length,cda:o.reduce(function(e,n){return e+n.cda_api_calls+n.cma_api_calls},0),cma:o.reduce(function(e,n){return e+n.cma_api_calls},0),bytes:o.reduce(function(e,n){return e+n.assets_traffic_bytes},0)},current:{days:i.length,cda:i.reduce(function(e,n){return e+n.cda_api_calls+n.cma_api_calls},0),cma:i.reduce(function(e,n){return e+n.cma_api_calls},0),bytes:i.reduce(function(e,n){return e+n.assets_traffic_bytes},0)}},l=[["Date","CDA","CMA","Traffic"]].concat(t.filter(function(e){return new Date(e.date).getMonth()===(new Date).getMonth()}).map(function(e){return[e.date,r(e.cda_api_calls),r(e.cma_api_calls),s.default(e.assets_traffic_bytes,{maximumFractionDigits:1})]})),d=[["Period","CDA","CDA (avg)","CMA","CMA (avg)","Traffic"],["Last month",r(c.last.cda),r(c.last.cda/c.last.days),r(c.last.cma),r(c.last.cma/c.last.days),s.default(c.last.bytes,{maximumFractionDigits:1})],["Current",r(c.current.cda),r(c.current.cda/c.current.days),r(c.current.cma),r(c.current.cma/c.current.days),s.default(c.current.bytes,{maximumFractionDigits:1})]],f=u.default("\n    "+n.name+"\n    \n    "+a.table(l,{header:{alignment:"center",content:"Usage (CDA / CMA)"}})+"\n    "+a.table(d,{header:{alignment:"center",content:n.name+" - Totals"}})+"\n\n  ");console.log(f)})}catch(e){return Promise.reject(e)}}()});
//# sourceMappingURL=index.umd.js.map
