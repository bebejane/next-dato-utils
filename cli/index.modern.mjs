#! /usr/bin/env node
import"dotenv/config";import{Command as n}from"commander";import{buildClient as t}from"@datocms/cma-client-node";import e from"dedent-js";import{table as r}from"table";import a from"pretty-bytes";var o,i="1.0.0",c=new n;c.version(i).description("next-dato-utils v"+i).option("-i, --info","Info DatoCMS project").option("-u, --usage","Usage DatoCMS project").option("-to, --token <value>","Api token").option("-t, --test <value>","Test DatoCMS project").parse(process.argv);var s=c.opts(),u=null!=(o=s.token)?o:process.env.DATOCMS_API_TOKEN;if(!u)throw new Error("DATOCMS_API_TOKEN is required");var l=t({apiToken:u,environment:process.env.DATOCMS_ENVIRONMENT||"main"});s.info&&function(){try{return Promise.resolve(Promise.all([l.site.find(),l.itemTypes.list(),l.webhooks.list(),l.plugins.list(),l.buildTriggers.list()])).then(function(n){var t,r,a=n[0],o=n[1],i=n[2],c=n[3],s=n[4],u=e("\n    "+a.name+"\n    "+(null!=(t=null==(r=s.find(function(n){return n.frontend_url}))?void 0:r.frontend_url)?t:"No frontend url")+"\n\n    -------------------------------\n    Timezone: "+a.timezone+"\n    Locales: "+a.locales+"\n\n    Models\n    -------------------------------\n    "+o.filter(function(n){return!n.modular_block}).map(function(n){return n.api_key}).join("\n")+"\n\n    Blocks\n    -------------------------------\n    "+o.filter(function(n){return n.modular_block}).map(function(n){return n.api_key}).join("\n")+"\n\n    Webhooks\n    -------------------------------\n    "+i.map(function(n){return n.name+"\n"+n.url}).join("\n\n")+"\n\n    Build Triggers\n    -------------------------------\n    "+s.map(function(n){return n.name+"\n"+n.frontend_url}).join("\n")+"\n\n    Plugins\n    -------------------------------\n    "+c.map(function(n){return""+n.name}).join("\n")+"\n  ");console.log(u)})}catch(n){return Promise.reject(n)}}(),s.usage&&function(){try{return Promise.resolve(Promise.all([l.site.find(),l.dailyUsages.list()])).then(function(n){var t=n[0],o=n[1],i=function(n){return n?n.toLocaleString("en-US",{maximumFractionDigits:0}):0},c=o.filter(function(n){return new Date(n.date).getMonth()<(new Date).getMonth()}),s=o.filter(function(n){return new Date(n.date).getMonth()===(new Date).getMonth()}),u={last:{days:c.length,cda:c.reduce(function(n,t){return n+t.cda_api_calls+t.cma_api_calls},0),cma:c.reduce(function(n,t){return n+t.cma_api_calls},0),bytes:c.reduce(function(n,t){return n+t.assets_traffic_bytes},0)},current:{days:s.length,cda:s.reduce(function(n,t){return n+t.cda_api_calls+t.cma_api_calls},0),cma:s.reduce(function(n,t){return n+t.cma_api_calls},0),bytes:s.reduce(function(n,t){return n+t.assets_traffic_bytes},0)}},l=[["Date","CDA","CMA","Traffic"]].concat(o.filter(function(n){return new Date(n.date).getMonth()===(new Date).getMonth()}).map(function(n){return[n.date,i(n.cda_api_calls),i(n.cma_api_calls),a(n.assets_traffic_bytes,{maximumFractionDigits:1})]})),m=[["Period","CDA","CDA (avg)","CMA","CMA (avg)","Traffic"],["Last month",i(u.last.cda),i(u.last.cda/u.last.days),i(u.last.cma),i(u.last.cma/u.last.days),a(u.last.bytes,{maximumFractionDigits:1})],["Current",i(u.current.cda),i(u.current.cda/u.current.days),i(u.current.cma),i(u.current.cma/u.current.days),a(u.current.bytes,{maximumFractionDigits:1})]],f=e("\n    "+t.name+"\n    \n    "+r(l,{header:{alignment:"center",content:"Usage (CDA / CMA)"}})+"\n    "+r(m,{header:{alignment:"center",content:t.name+" - Totals"}})+"\n\n  ");console.log(f)})}catch(n){return Promise.reject(n)}}();
//# sourceMappingURL=index.modern.mjs.map
