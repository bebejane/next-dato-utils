#! /usr/bin/env node
require("dotenv/config");var n=require("commander"),e=require("@datocms/cma-client-node"),t=require("dedent-js"),r=require("table"),a=require("pretty-bytes");function i(n){return n&&"object"==typeof n&&"default"in n?n:{default:n}}var o,c=/*#__PURE__*/i(t),u=/*#__PURE__*/i(a),s="1.0.0",l=new n.Command;l.version(s).description("next-dato-utils v"+s).option("-i, --info","Info DatoCMS project").option("-u, --usage","Usage DatoCMS project").option("-to, --token <value>","Api token").option("-t, --test <value>","Test DatoCMS project").parse(process.argv);var d=l.opts(),f=null!=(o=d.token)?o:process.env.DATOCMS_API_TOKEN;if(!f)throw new Error("DATOCMS_API_TOKEN is required");var m=e.buildClient({apiToken:f,environment:process.env.DATOCMS_ENVIRONMENT||"main"});d.info&&function(){try{return Promise.resolve(Promise.all([m.site.find(),m.itemTypes.list(),m.webhooks.list(),m.plugins.list(),m.buildTriggers.list()])).then(function(n){var e,t,r=n[0],a=n[1],i=n[2],o=n[3],u=n[4],s=c.default("\n    "+r.name+"\n    "+(null!=(e=null==(t=u.find(function(n){return n.frontend_url}))?void 0:t.frontend_url)?e:"No frontend url")+"\n\n    -------------------------------\n    Timezone: "+r.timezone+"\n    Locales: "+r.locales+"\n\n    Models\n    -------------------------------\n    "+a.filter(function(n){return!n.modular_block}).map(function(n){return n.api_key}).join("\n")+"\n\n    Blocks\n    -------------------------------\n    "+a.filter(function(n){return n.modular_block}).map(function(n){return n.api_key}).join("\n")+"\n\n    Webhooks\n    -------------------------------\n    "+i.map(function(n){return n.name+"\n"+n.url}).join("\n\n")+"\n\n    Build Triggers\n    -------------------------------\n    "+u.map(function(n){return n.name+"\n"+n.frontend_url}).join("\n")+"\n\n    Plugins\n    -------------------------------\n    "+o.map(function(n){return""+n.name}).join("\n")+"\n  ");console.log(s)})}catch(n){return Promise.reject(n)}}(),d.usage&&function(){try{return Promise.resolve(Promise.all([m.site.find(),m.dailyUsages.list()])).then(function(n){var e=n[0],t=n[1],a=function(n){return n?n.toLocaleString("en-US",{maximumFractionDigits:0}):0},i=t.filter(function(n){return new Date(n.date).getMonth()<(new Date).getMonth()}),o=t.filter(function(n){return new Date(n.date).getMonth()===(new Date).getMonth()}),s={last:{days:i.length,cda:i.reduce(function(n,e){return n+e.cda_api_calls+e.cma_api_calls},0),cma:i.reduce(function(n,e){return n+e.cma_api_calls},0),bytes:i.reduce(function(n,e){return n+e.assets_traffic_bytes},0)},current:{days:o.length,cda:o.reduce(function(n,e){return n+e.cda_api_calls+e.cma_api_calls},0),cma:o.reduce(function(n,e){return n+e.cma_api_calls},0),bytes:o.reduce(function(n,e){return n+e.assets_traffic_bytes},0)}},l=[["Date","CDA","CMA","Traffic"]].concat(t.filter(function(n){return new Date(n.date).getMonth()===(new Date).getMonth()}).map(function(n){return[n.date,a(n.cda_api_calls),a(n.cma_api_calls),u.default(n.assets_traffic_bytes,{maximumFractionDigits:1})]})),d=[["Period","CDA","CDA (avg)","CMA","CMA (avg)","Traffic"],["Last month",a(s.last.cda),a(s.last.cda/s.last.days),a(s.last.cma),a(s.last.cma/s.last.days),u.default(s.last.bytes,{maximumFractionDigits:1})],["Current",a(s.current.cda),a(s.current.cda/s.current.days),a(s.current.cma),a(s.current.cma/s.current.days),u.default(s.current.bytes,{maximumFractionDigits:1})]],f=c.default("\n    "+e.name+"\n    \n    "+r.table(l,{header:{alignment:"center",content:"Usage (CDA / CMA)"}})+"\n    "+r.table(d,{header:{alignment:"center",content:e.name+" - Totals"}})+"\n\n  ");console.log(f)})}catch(n){return Promise.reject(n)}}();
//# sourceMappingURL=index.cjs.map
