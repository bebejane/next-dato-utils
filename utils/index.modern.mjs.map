{"version":3,"file":"index.modern.mjs","sources":["../src/utils/markdown-truncate.ts","../src/utils/iterate-object.ts","../src/utils/utils.ts"],"sourcesContent":["\nexport default function (text: string = '', options: { limit: number, ellipsis: boolean } = { limit: 1, ellipsis: false }) {\n  const { limit, ellipsis } = options || {};\n\n  if (text.length <= limit) {\n    return text;\n  }\n\n  let outputText = replaceFormatMarkersWithPlaceholders(text);\n  outputText = truncate(outputText, limit, ellipsis);\n  outputText = replaceFormatPlaceholdersWithMarkers(outputText);\n  return outputText;\n};\n\n\nconst ASTERISK_ITALIC = '*';\nconst UNDERSCORE_ITALIC = '_';\nconst ASTERISK_BOLD = '**';\nconst UNDERSCORE_BOLD = '__';\nconst ESCAPED_UNDERSCORE = '\\\\_';\nconst ESCAPED_ASTERISK = '\\\\*'\n\nconst ESCAPED_ASTERISK_REGEXP = /\\\\\\*/g;\nconst ASTERISK_PLACEHOLDER_REGEXP = /ASTERISKPLACEHOLDER/gm;\n\nconst ESCAPED_UNDERSCORE_REGEXP = /\\\\_/g;\nconst UNDERSCORE_PLACEHOLDER_REGEXP = /UNDERSCOREPLACEHOLDER/gm;\n\nconst UNDERSCORE_BOLD_PLACEHOLDER_REGEXP = /UNDERSCOREBOLDPLACEHOLDER/gm;\nconst UNDERSCORE_BOLD_REGEXP = /(__)(.*?)(__)/g;\n\nconst ASTERISK_BOLD_PLACEHOLDER_REGEXP = /ASTERISKBOLDPLACEHOLDER/gm;\nconst ASTERISK_BOLD_REGEXP = /(\\*\\*)(.*?)(\\*\\*)/g;\n\nconst UNDERSCORE_ITALIC_PLACEHOLDER_REGEXP = /UNDERSCOREITALICPLACEHOLDER/gm;\nconst UNDERSCORE_ITALIC_REGEXP = /(_)(.*?)(_)/g;\n\nconst ASTERISK_ITALIC_PLACEHOLDER_REGEXP = /ASTERISKITALICPLACEHOLDER/gm;\nconst ASTERISK_ITALIC_REGEXP = /(\\*)(.*?)(\\*)/g;\n\nconst HYPERLINK = /^\\[([^[]+)\\]\\(([^)]+)\\)/;\n\nconst replaceFormatMarkersWithPlaceholders = (text: string) =>\n  text\n    .replace(ESCAPED_UNDERSCORE_REGEXP, UNDERSCORE_PLACEHOLDER_REGEXP.source)\n    .replace(ESCAPED_ASTERISK_REGEXP, ASTERISK_PLACEHOLDER_REGEXP.source)\n    .replace(\n      UNDERSCORE_BOLD_REGEXP,\n      `${UNDERSCORE_BOLD_PLACEHOLDER_REGEXP.source}$2${UNDERSCORE_BOLD_PLACEHOLDER_REGEXP.source}`\n    )\n    .replace(\n      ASTERISK_BOLD_REGEXP,\n      `${ASTERISK_BOLD_PLACEHOLDER_REGEXP.source}$2${ASTERISK_BOLD_PLACEHOLDER_REGEXP.source}`\n    )\n    .replace(\n      UNDERSCORE_ITALIC_REGEXP,\n      `${UNDERSCORE_ITALIC_PLACEHOLDER_REGEXP.source}$2${UNDERSCORE_ITALIC_PLACEHOLDER_REGEXP.source}`\n    )\n    .replace(\n      ASTERISK_ITALIC_REGEXP,\n      `${ASTERISK_ITALIC_PLACEHOLDER_REGEXP.source}$2${ASTERISK_ITALIC_PLACEHOLDER_REGEXP.source}`\n    );\n\nconst replaceFormatPlaceholdersWithMarkers = (text: string) =>\n  text\n    .replace(UNDERSCORE_PLACEHOLDER_REGEXP, ESCAPED_UNDERSCORE)\n    .replace(ASTERISK_PLACEHOLDER_REGEXP, ESCAPED_ASTERISK)\n    .replace(UNDERSCORE_BOLD_PLACEHOLDER_REGEXP, UNDERSCORE_BOLD)\n    .replace(ASTERISK_BOLD_PLACEHOLDER_REGEXP, ASTERISK_BOLD)\n    .replace(UNDERSCORE_ITALIC_PLACEHOLDER_REGEXP, UNDERSCORE_ITALIC)\n    .replace(ASTERISK_ITALIC_PLACEHOLDER_REGEXP, ASTERISK_ITALIC);\n\nconst formatMarkers = [\n  ASTERISK_BOLD_PLACEHOLDER_REGEXP.source,\n  UNDERSCORE_BOLD_PLACEHOLDER_REGEXP.source,\n  ASTERISK_ITALIC_PLACEHOLDER_REGEXP.source,\n  UNDERSCORE_ITALIC_PLACEHOLDER_REGEXP.source,\n];\n\nconst formatPlaceholdersMap = {\n  [UNDERSCORE_PLACEHOLDER_REGEXP.source]: ESCAPED_UNDERSCORE.length,\n  [ASTERISK_PLACEHOLDER_REGEXP.source]: ESCAPED_ASTERISK.length,\n}\n\nconst findFormatPlaceholderAhead = (text: string) => {\n  const formatPlaceholders = Object.keys(formatPlaceholdersMap);\n\n  for (let i = 0, l = formatPlaceholders.length; i < l; i++) {\n    if (text.startsWith(formatPlaceholders[i])) {\n      return formatPlaceholders[i];\n    }\n  }\n\n  return null;\n}\n\nconst findFormatMarkerAhead = (text: string, formatStack: string[]) => {\n  for (let i = 0, l = formatMarkers.length; i < l; i++) {\n    if (text.startsWith(formatMarkers[i])) {\n      if (formatStack[formatStack.length - 1] === formatMarkers[i]) {\n        formatStack.pop();\n      } else {\n        formatStack.push(formatMarkers[i]);\n      }\n      return formatMarkers[i];\n    }\n  }\n\n  return null;\n};\n\nconst truncate = (text: string, limit: number, ellipsis: boolean) => {\n  let count = 0;\n\n  const truncateString = (text: string) => {\n    let formatStack: string[] = [];\n    let skipCountIncrement = false;\n    let outputText = '';\n    let index = 0;\n\n    while (count < limit && index < text.length) {\n      const formatMarker = findFormatMarkerAhead(text.substring(index), formatStack);\n      if (formatMarker) {\n        outputText += formatMarker;\n        index += formatMarker.length;\n        skipCountIncrement = true;\n      }\n\n      const formatPlaceholder = findFormatPlaceholderAhead(text.substring(index));\n      if (formatPlaceholder) {\n        outputText += formatPlaceholder;\n        index += formatPlaceholder.length;\n        skipCountIncrement = true;\n        count += formatPlaceholdersMap[formatPlaceholder];\n      }\n\n      const hyperlinkAheadRegexp = new RegExp(HYPERLINK);\n      const hyperlinkMatch = hyperlinkAheadRegexp.exec(text.substring(index));\n      if (hyperlinkMatch) {\n        const hyperlinkText = hyperlinkMatch[1];\n        const hyperlinkUrl = hyperlinkMatch[2];\n\n        outputText += `[${truncateString(hyperlinkText)}](${hyperlinkUrl})`;\n        index += hyperlinkMatch[0].length;\n        skipCountIncrement = true;\n      }\n\n      if (!formatMarker && !hyperlinkMatch) {\n        outputText += text[index];\n        index++;\n      }\n\n      if (!skipCountIncrement) {\n        count++;\n      }\n\n      skipCountIncrement = false;\n    }\n\n    outputText = outputText.trimEnd();\n\n    while (formatStack.length > 0) {\n      outputText += formatStack.pop();\n    }\n\n    return outputText;\n  };\n\n  let outputText = truncateString(text);\n\n  if (ellipsis && outputText.length < text.length) {\n    outputText += '...';\n  }\n\n  return outputText;\n};\n","export default function iterateObject(obj: any, fn: (key: string, value: any, obj: any) => boolean) {\n  let i = 0\n    , keys = []\n    ;\n\n  if (Array.isArray(obj)) {\n    for (; i < obj.length; ++i) {\n      if (fn(obj[i], i, obj) === false)\n        break;\n    }\n  } else if (typeof obj === \"object\" && obj !== null) {\n    keys = Object.keys(obj);\n    for (; i < keys.length; ++i) {\n      if (fn(obj[keys[i]], keys[i], obj) === false)\n        break;\n    }\n  }\n}","import { ReactNode } from \"react\";\nimport { ApiError } from \"@datocms/cma-client-browser\";\n\nexport const isServer = typeof window === 'undefined';\n\nexport const chunkArray = (array: any[] | ReactNode[], chunkSize: number) => {\n  const newArr = []\n  for (let i = 0; i < array.length; i += chunkSize)\n    newArr.push(array.slice(i, i + chunkSize));\n  return newArr\n}\n\nexport const parseDatoError = (err: any): string => {\n  const errors = (err as ApiError).errors.map(({ attributes: { code, details } }) => ({ code, field: details?.field, message: details?.message, detailsCode: details?.code, errors: Array.isArray(details?.errors) ? details?.errors.join('. ') : undefined }))\n  return errors.map(({ code, field, message, detailsCode, errors }) => `${code} ${field ? `(${field})` : ''} ${message || ''} ${detailsCode || ''} ${errors ? `(${errors})` : ''}`).join('\\n')\n}\n\nexport const parseDatoCMSApiError = (e: any): string => {\n\n  if (e instanceof ApiError === false)\n    return typeof e === 'string' ? e : e.message || e.toString()\n\n  const err = new ApiError(e)\n  return err.errors.map(e => {\n    let code = `${e.attributes.code}`\n    let errors: string[] = []\n\n    if (Array.isArray(e.attributes.details?.errors)) {\n      e.attributes.details.errors.forEach(e => {\n        errors.push(Object.keys(e).map(k => `${k}: ${e[k]}`).join(', '))\n      })\n    }\n    return `${code}${errors.length ? `: ${errors.join('. ')}` : ''}`\n  }).join('\\n')\n}\n\nexport const isEmpty = (obj: any) => Object.keys(obj).filter(k => obj[k] !== undefined).length === 0\n\nexport const capitalize = (str: string, lower: boolean = false) => {\n  return (lower ? str.toLowerCase() : str).replace(/(?:^|\\s|[\"'([{])+\\S/g, match => match.toUpperCase());\n}\n\nexport const sleep = (ms: number) => new Promise((resolve, refject) => setTimeout(resolve, ms))\n\nexport const rInt = (min: number, max: number): number => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport const truncateParagraph = (s: string, sentances: number = 1, ellipsis: boolean = true, minLength = 200): string => {\n  if (!s || s.length < minLength)\n    return s;\n\n  let dotIndex = s.split('.')?.slice(0, sentances + 1).join('.').lastIndexOf('.')\n  let qIndex = s.split('? ')?.slice(0, sentances + 1).join('? ').lastIndexOf('? ')\n  const isQuestion = qIndex !== -1 && qIndex < dotIndex || (dotIndex === -1 && qIndex > -1)\n\n  if (dotIndex === -1 && qIndex === -1) {\n    dotIndex = minLength - 1\n    ellipsis = true\n  }\n\n  let str = s.substring(0, isQuestion ? qIndex : dotIndex) //`${s.substring(0, minLength - 1)}${s.substring(minLength - 1).split('.').slice(0, sentances).join('. ')}`\n  return `${str}${ellipsis ? '...' : isQuestion ? '?' : '.'}`;\n}\n\nexport const truncateWords = (text: string, maxLength: number): string => {\n  if (text.length <= maxLength)\n    return text;\n\n  var truncatedText = text.substring(0, maxLength);\n  var lastSpaceIndex = truncatedText.lastIndexOf(' ');\n  if (lastSpaceIndex !== -1) {\n    truncatedText = truncatedText.substr(0, lastSpaceIndex);\n  }\n  return truncatedText + '...';\n}\n\nexport const sortSwedish = <T>(arr: T[], key?: string): T[] => {\n  const alfabet = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"Å\", \"Ä\", \"Ö\"];\n\n  return arr.sort((a: any, b: any) => {\n    const ai = alfabet.findIndex((l) => l === (typeof key === 'string' ? a[key] : a)?.charAt(0).toUpperCase())\n    const bi = alfabet.findIndex((l) => l === (typeof key === 'string' ? b[key] : b)?.charAt(0).toUpperCase())\n    return !ai ? -1 : ai > bi ? 1 : ai === bi ? 0 : -1\n  })\n}\n\nexport const awaitElement = async <T>(selector: string) => {\n\n  const cleanSelector = function (selector: string) {\n    (selector.match(/(#[0-9][^\\s:,]*)/g) || []).forEach(function (n) {\n      selector = selector.replace(n, '[id=\"' + n.replace(\"#\", \"\") + '\"]');\n    });\n    return selector;\n  }\n\n  for (let i = 0; i < 100; i++) {\n    const el = document.querySelector(cleanSelector(selector)) as T\n    if (el) return el\n    await sleep(30)\n  }\n\n  throw new Error(`Element ${selector} not found`)\n}"],"names":["markdownTruncate","text","options","limit","ellipsis","_ref","length","outputText","replaceFormatMarkersWithPlaceholders","truncate","replaceFormatPlaceholdersWithMarkers","ESCAPED_ASTERISK_REGEXP","ASTERISK_PLACEHOLDER_REGEXP","ESCAPED_UNDERSCORE_REGEXP","UNDERSCORE_PLACEHOLDER_REGEXP","UNDERSCORE_BOLD_PLACEHOLDER_REGEXP","UNDERSCORE_BOLD_REGEXP","ASTERISK_BOLD_PLACEHOLDER_REGEXP","ASTERISK_BOLD_REGEXP","UNDERSCORE_ITALIC_PLACEHOLDER_REGEXP","UNDERSCORE_ITALIC_REGEXP","ASTERISK_ITALIC_PLACEHOLDER_REGEXP","ASTERISK_ITALIC_REGEXP","HYPERLINK","replace","source","formatMarkers","formatPlaceholdersMap","_formatPlaceholdersMa","ESCAPED_UNDERSCORE","ESCAPED_ASTERISK","findFormatPlaceholderAhead","formatPlaceholders","Object","keys","i","l","startsWith","findFormatMarkerAhead","formatStack","pop","push","count","truncateString","skipCountIncrement","index","formatMarker","substring","formatPlaceholder","hyperlinkMatch","RegExp","exec","hyperlinkUrl","trimEnd","iterateObject","obj","fn","Array","isArray","_settle","pact","state","value","s","_Pact","o","bind","v","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","isServer","window","chunkArray","array","chunkSize","newArr","slice","parseDatoError","err","errors","map","_ref$attributes","attributes","details","code","field","message","detailsCode","join","undefined","_ref2","parseDatoCMSApiError","ApiError","toString","_e$attributes$details","forEach","k","isEmpty","filter","capitalize","str","lower","toLowerCase","match","toUpperCase","sleep","ms","Promise","resolve","refject","setTimeout","rInt","min","max","Math","ceil","floor","random","truncateParagraph","sentances","minLength","_s$split","_s$split2","dotIndex","split","lastIndexOf","qIndex","isQuestion","truncateWords","maxLength","truncatedText","lastSpaceIndex","substr","sortSwedish","arr","key","alfabet","sort","a","b","ai","findIndex","_ref3","charAt","bi","_ref4","awaitElement","selector","_temp2","_exit","_result","Error","_temp","_for","el","document","querySelector","n","cleanSelector","reject"],"mappings":"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"}