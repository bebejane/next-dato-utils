{"version":3,"file":"index.umd.js","sources":["../src/utils/markdown-truncate.ts","../src/utils/utils.ts","../src/utils/iterate-object.ts"],"sourcesContent":["\nexport default function (text: string = '', options: { limit: number, ellipsis: boolean } = { limit: 1, ellipsis: false }) {\n  const { limit, ellipsis } = options || {};\n\n  if (text.length <= limit) {\n    return text;\n  }\n\n  let outputText = replaceFormatMarkersWithPlaceholders(text);\n  outputText = truncate(outputText, limit, ellipsis);\n  outputText = replaceFormatPlaceholdersWithMarkers(outputText);\n  return outputText;\n};\n\n\nconst ASTERISK_ITALIC = '*';\nconst UNDERSCORE_ITALIC = '_';\nconst ASTERISK_BOLD = '**';\nconst UNDERSCORE_BOLD = '__';\nconst ESCAPED_UNDERSCORE = '\\\\_';\nconst ESCAPED_ASTERISK = '\\\\*'\n\nconst ESCAPED_ASTERISK_REGEXP = /\\\\\\*/g;\nconst ASTERISK_PLACEHOLDER_REGEXP = /ASTERISKPLACEHOLDER/gm;\n\nconst ESCAPED_UNDERSCORE_REGEXP = /\\\\_/g;\nconst UNDERSCORE_PLACEHOLDER_REGEXP = /UNDERSCOREPLACEHOLDER/gm;\n\nconst UNDERSCORE_BOLD_PLACEHOLDER_REGEXP = /UNDERSCOREBOLDPLACEHOLDER/gm;\nconst UNDERSCORE_BOLD_REGEXP = /(__)(.*?)(__)/g;\n\nconst ASTERISK_BOLD_PLACEHOLDER_REGEXP = /ASTERISKBOLDPLACEHOLDER/gm;\nconst ASTERISK_BOLD_REGEXP = /(\\*\\*)(.*?)(\\*\\*)/g;\n\nconst UNDERSCORE_ITALIC_PLACEHOLDER_REGEXP = /UNDERSCOREITALICPLACEHOLDER/gm;\nconst UNDERSCORE_ITALIC_REGEXP = /(_)(.*?)(_)/g;\n\nconst ASTERISK_ITALIC_PLACEHOLDER_REGEXP = /ASTERISKITALICPLACEHOLDER/gm;\nconst ASTERISK_ITALIC_REGEXP = /(\\*)(.*?)(\\*)/g;\n\nconst HYPERLINK = /^\\[([^[]+)\\]\\(([^)]+)\\)/;\n\nconst replaceFormatMarkersWithPlaceholders = (text: string) =>\n  text\n    .replace(ESCAPED_UNDERSCORE_REGEXP, UNDERSCORE_PLACEHOLDER_REGEXP.source)\n    .replace(ESCAPED_ASTERISK_REGEXP, ASTERISK_PLACEHOLDER_REGEXP.source)\n    .replace(\n      UNDERSCORE_BOLD_REGEXP,\n      `${UNDERSCORE_BOLD_PLACEHOLDER_REGEXP.source}$2${UNDERSCORE_BOLD_PLACEHOLDER_REGEXP.source}`\n    )\n    .replace(\n      ASTERISK_BOLD_REGEXP,\n      `${ASTERISK_BOLD_PLACEHOLDER_REGEXP.source}$2${ASTERISK_BOLD_PLACEHOLDER_REGEXP.source}`\n    )\n    .replace(\n      UNDERSCORE_ITALIC_REGEXP,\n      `${UNDERSCORE_ITALIC_PLACEHOLDER_REGEXP.source}$2${UNDERSCORE_ITALIC_PLACEHOLDER_REGEXP.source}`\n    )\n    .replace(\n      ASTERISK_ITALIC_REGEXP,\n      `${ASTERISK_ITALIC_PLACEHOLDER_REGEXP.source}$2${ASTERISK_ITALIC_PLACEHOLDER_REGEXP.source}`\n    );\n\nconst replaceFormatPlaceholdersWithMarkers = (text: string) =>\n  text\n    .replace(UNDERSCORE_PLACEHOLDER_REGEXP, ESCAPED_UNDERSCORE)\n    .replace(ASTERISK_PLACEHOLDER_REGEXP, ESCAPED_ASTERISK)\n    .replace(UNDERSCORE_BOLD_PLACEHOLDER_REGEXP, UNDERSCORE_BOLD)\n    .replace(ASTERISK_BOLD_PLACEHOLDER_REGEXP, ASTERISK_BOLD)\n    .replace(UNDERSCORE_ITALIC_PLACEHOLDER_REGEXP, UNDERSCORE_ITALIC)\n    .replace(ASTERISK_ITALIC_PLACEHOLDER_REGEXP, ASTERISK_ITALIC);\n\nconst formatMarkers = [\n  ASTERISK_BOLD_PLACEHOLDER_REGEXP.source,\n  UNDERSCORE_BOLD_PLACEHOLDER_REGEXP.source,\n  ASTERISK_ITALIC_PLACEHOLDER_REGEXP.source,\n  UNDERSCORE_ITALIC_PLACEHOLDER_REGEXP.source,\n];\n\nconst formatPlaceholdersMap = {\n  [UNDERSCORE_PLACEHOLDER_REGEXP.source]: ESCAPED_UNDERSCORE.length,\n  [ASTERISK_PLACEHOLDER_REGEXP.source]: ESCAPED_ASTERISK.length,\n}\n\nconst findFormatPlaceholderAhead = (text: string) => {\n  const formatPlaceholders = Object.keys(formatPlaceholdersMap);\n\n  for (let i = 0, l = formatPlaceholders.length; i < l; i++) {\n    if (text.startsWith(formatPlaceholders[i])) {\n      return formatPlaceholders[i];\n    }\n  }\n\n  return null;\n}\n\nconst findFormatMarkerAhead = (text: string, formatStack: string[]) => {\n  for (let i = 0, l = formatMarkers.length; i < l; i++) {\n    if (text.startsWith(formatMarkers[i])) {\n      if (formatStack[formatStack.length - 1] === formatMarkers[i]) {\n        formatStack.pop();\n      } else {\n        formatStack.push(formatMarkers[i]);\n      }\n      return formatMarkers[i];\n    }\n  }\n\n  return null;\n};\n\nconst truncate = (text: string, limit: number, ellipsis: boolean) => {\n  let count = 0;\n\n  const truncateString = (text: string) => {\n    let formatStack: string[] = [];\n    let skipCountIncrement = false;\n    let outputText = '';\n    let index = 0;\n\n    while (count < limit && index < text.length) {\n      const formatMarker = findFormatMarkerAhead(text.substring(index), formatStack);\n      if (formatMarker) {\n        outputText += formatMarker;\n        index += formatMarker.length;\n        skipCountIncrement = true;\n      }\n\n      const formatPlaceholder = findFormatPlaceholderAhead(text.substring(index));\n      if (formatPlaceholder) {\n        outputText += formatPlaceholder;\n        index += formatPlaceholder.length;\n        skipCountIncrement = true;\n        count += formatPlaceholdersMap[formatPlaceholder];\n      }\n\n      const hyperlinkAheadRegexp = new RegExp(HYPERLINK);\n      const hyperlinkMatch = hyperlinkAheadRegexp.exec(text.substring(index));\n      if (hyperlinkMatch) {\n        const hyperlinkText = hyperlinkMatch[1];\n        const hyperlinkUrl = hyperlinkMatch[2];\n\n        outputText += `[${truncateString(hyperlinkText)}](${hyperlinkUrl})`;\n        index += hyperlinkMatch[0].length;\n        skipCountIncrement = true;\n      }\n\n      if (!formatMarker && !hyperlinkMatch) {\n        outputText += text[index];\n        index++;\n      }\n\n      if (!skipCountIncrement) {\n        count++;\n      }\n\n      skipCountIncrement = false;\n    }\n\n    outputText = outputText.trimEnd();\n\n    while (formatStack.length > 0) {\n      outputText += formatStack.pop();\n    }\n\n    return outputText;\n  };\n\n  let outputText = truncateString(text);\n\n  if (ellipsis && outputText.length < text.length) {\n    outputText += '...';\n  }\n\n  return outputText;\n};\n","import { ReactNode } from \"react\";\nimport { ApiError } from \"@datocms/cma-client-browser\";\n\nexport const isServer = typeof window === 'undefined';\n\nexport const chunkArray = (array: any[] | ReactNode[], chunkSize: number) => {\n  const newArr = []\n  for (let i = 0; i < array.length; i += chunkSize)\n    newArr.push(array.slice(i, i + chunkSize));\n  return newArr\n}\n\nexport const parseDatoError = (err: any): string => {\n  const errors = (err as ApiError).errors.map(({ attributes: { code, details } }) => ({ code, field: details?.field, message: details?.message, detailsCode: details?.code, errors: Array.isArray(details?.errors) ? details?.errors.join('. ') : undefined }))\n  return errors.map(({ code, field, message, detailsCode, errors }) => `${code} ${field ? `(${field})` : ''} ${message || ''} ${detailsCode || ''} ${errors ? `(${errors})` : ''}`).join('\\n')\n}\n\nexport const parseDatoCMSApiError = (e: any): string => {\n\n  if (e instanceof ApiError === false)\n    return typeof e === 'string' ? e : e.message || e.toString()\n\n  const err = new ApiError(e)\n  return err.errors.map(e => {\n    let code = `${e.attributes.code}`\n    let errors: string[] = []\n\n    if (Array.isArray(e.attributes.details?.errors)) {\n      e.attributes.details.errors.forEach(e => {\n        errors.push(Object.keys(e).map(k => `${k}: ${e[k]}`).join(', '))\n      })\n    }\n    return `${code}${errors.length ? `: ${errors.join('. ')}` : ''}`\n  }).join('\\n')\n}\n\nexport const isEmpty = (obj: any) => Object.keys(obj).filter(k => obj[k] !== undefined).length === 0\n\nexport const capitalize = (str: string, lower: boolean = false) => {\n  return (lower ? str.toLowerCase() : str).replace(/(?:^|\\s|[\"'([{])+\\S/g, match => match.toUpperCase());\n}\n\nexport const sleep = (ms: number) => new Promise((resolve, refject) => setTimeout(resolve, ms))\n\nexport const rInt = (min: number, max: number): number => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport const truncateParagraph = (s: string, sentances: number = 1, ellipsis: boolean = true, minLength = 200): string => {\n  if (!s || s.length < minLength)\n    return s;\n\n  let dotIndex = s.split('.')?.slice(0, sentances + 1).join('.').lastIndexOf('.')\n  let qIndex = s.split('? ')?.slice(0, sentances + 1).join('? ').lastIndexOf('? ')\n  const isQuestion = qIndex !== -1 && qIndex < dotIndex || (dotIndex === -1 && qIndex > -1)\n\n  if (dotIndex === -1 && qIndex === -1) {\n    dotIndex = minLength - 1\n    ellipsis = true\n  }\n\n  let str = s.substring(0, isQuestion ? qIndex : dotIndex) //`${s.substring(0, minLength - 1)}${s.substring(minLength - 1).split('.').slice(0, sentances).join('. ')}`\n  return `${str}${ellipsis ? '...' : isQuestion ? '?' : '.'}`;\n}\n\nexport const truncateWords = (text: string, maxLength: number): string => {\n  if (text.length <= maxLength)\n    return text;\n\n  var truncatedText = text.substring(0, maxLength);\n  var lastSpaceIndex = truncatedText.lastIndexOf(' ');\n  if (lastSpaceIndex !== -1) {\n    truncatedText = truncatedText.substr(0, lastSpaceIndex);\n  }\n  return truncatedText + '...';\n}\n\nexport const sortSwedish = <T>(arr: T[], key?: string): T[] => {\n  const alfabet = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"Å\", \"Ä\", \"Ö\"];\n\n  return arr.sort((a: any, b: any) => {\n    const ai = alfabet.findIndex((l) => l === (typeof key === 'string' ? a[key] : a)?.charAt(0).toUpperCase())\n    const bi = alfabet.findIndex((l) => l === (typeof key === 'string' ? b[key] : b)?.charAt(0).toUpperCase())\n    return !ai ? -1 : ai > bi ? 1 : ai === bi ? 0 : -1\n  })\n}\n\nexport const awaitElement = async <T>(selector: string) => {\n\n  const cleanSelector = function (selector: string) {\n    (selector.match(/(#[0-9][^\\s:,]*)/g) || []).forEach(function (n) {\n      selector = selector.replace(n, '[id=\"' + n.replace(\"#\", \"\") + '\"]');\n    });\n    return selector;\n  }\n\n  for (let i = 0; i < 100; i++) {\n    const el = document.querySelector(cleanSelector(selector)) as T\n    if (el) return el\n    await sleep(30)\n  }\n\n  throw new Error(`Element ${selector} not found`)\n}","export default function iterateObject(obj: any, fn: (key: string, value: any, obj: any) => boolean) {\n  let i = 0\n    , keys = []\n    ;\n\n  if (Array.isArray(obj)) {\n    for (; i < obj.length; ++i) {\n      if (fn(obj[i], i, obj) === false)\n        break;\n    }\n  } else if (typeof obj === \"object\" && obj !== null) {\n    keys = Object.keys(obj);\n    for (; i < keys.length; ++i) {\n      if (fn(obj[keys[i]], keys[i], obj) === false)\n        break;\n    }\n  }\n}"],"names":["ESCAPED_ASTERISK_REGEXP","ASTERISK_PLACEHOLDER_REGEXP","ESCAPED_UNDERSCORE_REGEXP","UNDERSCORE_PLACEHOLDER_REGEXP","UNDERSCORE_BOLD_PLACEHOLDER_REGEXP","UNDERSCORE_BOLD_REGEXP","ASTERISK_BOLD_PLACEHOLDER_REGEXP","ASTERISK_BOLD_REGEXP","UNDERSCORE_ITALIC_PLACEHOLDER_REGEXP","UNDERSCORE_ITALIC_REGEXP","ASTERISK_ITALIC_PLACEHOLDER_REGEXP","ASTERISK_ITALIC_REGEXP","HYPERLINK","formatMarkers","source","formatPlaceholdersMap","_formatPlaceholdersMa","ESCAPED_UNDERSCORE","ESCAPED_ASTERISK","findFormatPlaceholderAhead","text","formatPlaceholders","Object","keys","i","l","length","startsWith","findFormatMarkerAhead","formatStack","pop","push","_settle","pact","state","value","s","_Pact","o","bind","v","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","isServer","window","sleep","ms","Promise","resolve","refject","setTimeout","selector","_temp2","_exit","_result","Error","_temp","_for","el","document","querySelector","match","forEach","n","replace","cleanSelector","reject","str","lower","toLowerCase","toUpperCase","array","chunkSize","newArr","slice","obj","filter","k","undefined","fn","Array","isArray","options","limit","ellipsis","_ref","outputText","replaceFormatMarkersWithPlaceholders","count","truncateString","skipCountIncrement","index","formatMarker","substring","formatPlaceholder","hyperlinkMatch","RegExp","exec","hyperlinkUrl","trimEnd","truncate","replaceFormatPlaceholdersWithMarkers","ApiError","message","toString","errors","map","_e$attributes$details","code","attributes","details","join","err","_ref$attributes","field","detailsCode","_ref2","min","max","Math","ceil","floor","random","arr","key","alfabet","sort","a","b","ai","findIndex","_ref3","charAt","bi","_ref4","sentances","minLength","_s$split","_s$split2","dotIndex","split","lastIndexOf","qIndex","isQuestion","maxLength","truncatedText","lastSpaceIndex","substr"],"mappings":"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"}